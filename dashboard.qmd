---
title: "Fatores Socioeconômicos no Brasil"
format:
  dashboard:
    orientation: columns
    theme:
      - flatly
logo: ufa_logo.jpg
output:
  flexdashboard::flex_dashboard:
    vertical_layout: fill
---

```{r}
#| label: pacotes
library(tidyverse)
library(sf)
library(geobr)
library(plotly)
library(leaflet)
library(gt)
library(DT)
library(treemapify)
library(flexdashboard)
library(scales)
library(purrr)
```
```{r}
#| label: limpeza_dados
# Carregar CSVs
bolsafamilia <- read_csv2("data/bolsa_família.csv", skip = 1, locale = locale(encoding = "UTF-8"))
idh_estados <- read_csv2("data/idh_estados.csv", skip = 1, locale = locale(encoding = "UTF-8"))
indice_gini <- read_csv2("data/indige_gini.csv", skip = 1, locale = locale(encoding = "UTF-8"))
taxa_de_homicidios <- read_csv2("data/taxa_de_homicídios.csv", skip = 1, locale = locale(encoding = "UTF-8"))
renda_per_capita <- read_csv2("data/renda_per_capita.csv", skip = 1, locale = locale(encoding = "UTF-8"))
mortalidade <- read_csv2("data/taxa_de_mortalidade.csv", skip = 1, locale = locale(encoding = "UTF-8"))
variacao_pib <- read_csv2("data/variacao_pib.csv", skip = 1, locale = locale(encoding = "UTF-8"))
analfabetismo <- read_csv2("data/analfabetismo.csv", skip = 1, locale = locale(encoding = "UTF-8"))
linha_pobreza <- read_csv2("data/linha_pobreza.csv", skip = 1, locale = locale(encoding = "UTF-8"))

# Pivotar e organizar cada base
dados_mortalidade <- mortalidade |> select(-c(2,23)) |> pivot_longer(cols = 3:21, names_to="Ano", values_to="taxa_de_mortalidade")
dados_gini <- indice_gini |> select(-c(2,9)) |> pivot_longer(cols=3:7, names_to="Ano", values_to="indice_gini")
dados_bolsafamilia <- bolsafamilia |> select(-c(2,23)) |> pivot_longer(cols=3:21, names_to="Ano", values_to="beneficiados_bolsa")
dados_idh <- idh_estados |> select(-c(2,14)) |> pivot_longer(cols=3:12, names_to="Ano", values_to="idh")
dados_homicidios <- taxa_de_homicidios |> select(-c(2,23)) |> pivot_longer(cols=3:21, names_to="Ano", values_to="taxa_de_homicidios")
dados_renda_per_capita <- renda_per_capita |> select(-c(2,16)) |> pivot_longer(cols=3:14, names_to="Ano", values_to="renda_per_capita")
dados_variacao_pib <- variacao_pib |> select(-c(2,22)) |> pivot_longer(cols=3:20, names_to="Ano", values_to="variacao_pib")
dados_analfabetismo <- analfabetismo |> select(-c(2,10)) |> pivot_longer(cols=3:8, names_to="Ano", values_to="analfabetismo")
dados_linha_pobreza <- linha_pobreza |> select(-c(2,9)) |> pivot_longer(cols=3:7, names_to="Ano", values_to="linha_pobreza")

# Base para mapas
mapa <- read_state(year = 2020) |> rename(Sigla=abbrev_state, geometry=geom) |> select(-c(1,3,4,5))

# Merge completo
bases <- list(dados_bolsafamilia, dados_gini, dados_homicidios, dados_idh, dados_linha_pobreza,
dados_mortalidade, dados_renda_per_capita, dados_variacao_pib, dados_analfabetismo)
dados <- reduce(bases, full_join, by=c("Sigla","Estado","Ano"))
dados <- left_join(dados, mapa, by="Sigla")
dados <- dados |> mutate(across(c("Sigla","Estado","Ano"), as.factor))
dados <- st_as_sf(dados)
```

# Informações

## Coluna 1 {width=40%}

### Linha 1 {height=50%}

::: {.card title="Sobre o dashboard"}
Este dashboard apresenta uma análise dos principais fatores socioeconômicos do Brasil, considerando indicadores como Bolsa Família, IDH, renda per capita, índice de Gini, taxa de homicídios e mortalidade, entre outros.  

O objetivo é fornecer uma visão integrada da situação socioeconômica dos estados brasileiros ao longo do tempo, permitindo identificar padrões e correlações entre os indicadores.

O dashboard foi realizado como culminância do primeiro desafio do Zetta Lab 2° Edição.
:::

### Linha 2 {height=50%}

::: {.card title="Autores"}
Este trabalho foi desenvolvido por:  

- José Augusto Andrade Souza  

 Aluno do Bacharelado em Estatística – Universidade Federal de Lavras (UFLA)
 
Contato: jose.souz5@estudante.ufla.br
:::

## Coluna 2 {width=25%}

::: {.card title="Base de dados"}
Os dados utilizados foram obtidos de fontes oficiais e consolidados em planilhas de indicadores socioeconômicos dos estados brasileiros. 

Cada variável busca auxiliar na compreensão dos aspectos socioeconômicos de impactos no nosso país.

A análise foca nos anos de 2005 a 2023, utilizando informações de:  

- Bolsa Família  
- IDH  
- Renda per capita  
- Índice de Gini  
- Taxa de homicídios  
- Mortalidade  
- Linha de pobreza  
- Analfabetismo  
- Variação do PIB
:::

## Coluna 3 {width=33%}

::: {.card title="Referências"}
IPEADATA – Instituto de Pesquisa Econômica Aplicada. Dados de indicadores socioeconômicos do Brasil. Disponível em: https://www.ipeadata.gov.br  

R Core Team (2025). R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing, Vienna, Austria.  
Wickham H. et al. tidyverse: Easily Install and Load the 'Tidyverse'. Versão 2.0.0.  
:::


# Políticas Públicas

## Coluna 1 {width=50%}

### Linha 1 {height=50%}

::: {.card title="População beneficiada pelo Bolsa Família (2023)"}
```{r}
dados_bf_2023 <- dados_bolsafamilia |> filter(Ano=="2023")
ggplot(dados_bf_2023, aes(area = beneficiados_bolsa, fill = Estado, label = Sigla)) +
geom_treemap() +
geom_treemap_text(colour="black", place="centre", grow=TRUE, reflow=TRUE) +
labs(title="População beneficiada pelo Bolsa Família (2023)", subtitle="Distribuição por estado", fill="Estado") +
theme_minimal() +
theme(legend.position="none")
```
:::

### Linha 2 {height=50%}

::: {.card title="Bolsa Família: Crescimento 2005 x 2023"}
```{r}
bf_comparacao <- dados_bolsafamilia |> filter(Ano %in% c("2005","2023")) |> select(Sigla, Estado, Ano, beneficiados_bolsa)
bf_wide <- bf_comparacao |> pivot_wider(names_from = Ano, values_from = beneficiados_bolsa)
colnames(bf_wide) <- c("Sigla","Estado","2005","2023")
bf_wide <- bf_wide |> mutate(`Aumento (%)` = round((`2023`-`2005`)/`2005`*100,1))
datatable(bf_wide, options=list(pageLength=27, dom='t'))
```
:::

## Coluna 2 {width=50%}

### Linha 1 {height=100%}

::: {.card title="Índice de Gini x Bolsa Família (2023)"}
```{r}
ggplot(subset(dados, Ano=="2023"), aes(x=beneficiados_bolsa, y=indice_gini)) +
geom_point(color="darkorange", size=3) +
labs(title="Índice de Gini x Bolsa Família (2023)", x="Beneficiados pelo Bolsa Família", y="Índice de Gini") +
theme_minimal()
```
:::

# Segurança Pública

## Coluna 1 {width=50%}

### Linha 1 {height=50%}

::: {.card title="Taxa de homicídios por estado (2023)"}
```{r}
ggplot(subset(dados, Ano=="2023"), aes(y=taxa_de_homicidios)) +
geom_boxplot(outlier.colour="red", outlier.shape=16, outlier.size=2) +
labs(title="Distribuição da Taxa de Homicídios", x="Estado", y="Taxa de homicídios") +
coord_cartesian(ylim=c(0,100)) +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5))
```
:::

### Linha 2 {height=50%}
```{r}
#| label: valuebox-homicidios
#| content: valuebox
#| title: Estado com maior taxa de homicídios
list(icon="exclamation-triangle", color="danger", value="Amapá")
```
## Coluna 2 {width=50%}

### Linha 1 {height=50%}

::: {.card title="Homicídios x Mortalidade (2023)"}
```{r}
ggplot(subset(dados, Ano=="2023"), aes(x=taxa_de_homicidios, y=taxa_de_mortalidade)) +
geom_point(color="forestgreen", size=3) +
labs(title="Homicídios x Mortalidade (2023)", x="Taxa de homicídios", y="Taxa de mortalidade") +
theme_minimal()
```
:::

### Linha 2 {height=50%}

::: {.card title="Mapa de Homicídios (2023)"}
```{r}
ggplot(subset(dados, Ano=="2023")) +
geom_sf(aes(fill=taxa_de_homicidios), color="white") +
scale_fill_gradient(low="lightgreen", high="darkgreen", name="Homicídios") +
labs(title="Mapa de Homicídios", subtitle="Fonte: Dados oficiais") +
theme_minimal()
```
:::

# Saúde

## Coluna 1 {width=50%}

### Linha 1 {height=50%}

::: {.card title="IDH x Mortalidade (2021)"}
```{r}
ggplot(subset(dados, Ano=="2021"), aes(x=idh, y=taxa_de_mortalidade)) +
geom_point(color="deepskyblue", size=3) +
labs(title="IDH x Mortalidade (2021)", x="IDH", y="Taxa de mortalidade") +
theme_minimal()
```
:::

### Linha 2 {height=50%}

::: {.card title="Pobreza x Mortalidade (2021)"}
```{r}
ggplot(subset(dados, Ano=="2021"), aes(x=linha_pobreza, y=taxa_de_mortalidade)) +
geom_point(color="dodgerblue4", size=3) +
labs(title="Pobreza x Mortalidade (2021)", x="Pessoas abaixo da linha de pobreza (%)", y="Taxa de mortalidade") +
theme_minimal()
```
:::

## Coluna 2 {width=50%}

### Linha 1 {height=100%}

::: {.card title="Evolução da Mortalidade: AM, BA, GO, SP, PR (2005–2023)"}
```{r}
ggplot(subset(dados, Sigla %in% c("AM","BA","GO","SP","PR")),
aes(x=as.numeric(as.character(Ano)), y=taxa_de_mortalidade, color=Sigla, group=Sigla)) +
geom_line(size=1) +
geom_point(size=2) +
labs(title="Evolução da Taxa de Mortalidade", subtitle="Estados selecionados", x="Ano", y="Taxa de mortalidade", color="Estado") +
scale_x_continuous(breaks=seq(2005,2023,2)) +
theme_minimal() +
theme(plot.title=element_text(face="bold", size=14), legend.position="bottom")
```
:::

# Desenvolvimento e Renda

## Coluna 1 {width=50%}

### Linha 1 {height=50%}

::: {.card title="Renda per capita x IDH (2021)"}
```{r}
ggplot(subset(dados, Ano=="2021"), aes(x=idh, y=renda_per_capita)) +
geom_point(color="mediumpurple", size=3) +
labs(title="Renda per capita x IDH (2021)", x="IDH", y="Renda per capita") +
theme_minimal()
```
:::

### Linha 2 {height=50%}

::: {.card title="Renda per capita x Índice de Gini (2020)"}
```{r}
ggplot(subset(dados, Ano=="2020"), aes(x=renda_per_capita, y=indice_gini)) +
geom_point(color="mediumvioletred", size=3) +
labs(title="Renda per capita x Índice de Gini (2020)", x="Renda per capita", y="Índice de Gini") +
theme_minimal()
```
:::

## Coluna 2 {width=50%}

### Linha 1 {height=100%} {.tabset}

#### IDH
```{r}
ggplot(subset(dados, Ano == "2021")) +
geom_sf(aes(fill = idh), color = "white") +
scale_fill_gradient(low = "lightblue", high = "darkblue", name = "IDH") +
labs(title = "Mapa de IDH", subtitle = "Fonte: Dados oficiais de 2021") +
theme_minimal()
```
#### Índice Gini
```{r}
ggplot(subset(dados, Ano == "2021")) +
geom_sf(aes(fill = indice_gini), color = "white") +
scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Índice Gini") +
labs(title = "Mapa do Índice Gini", subtitle = "Fonte: Dados oficiais de 2021") +
theme_minimal()
```
